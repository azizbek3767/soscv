@model Soskd.Admin.ViewModels.DonationListViewModel
@{
    ViewData["Title"] = "Donations Management";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-heart me-2 text-danger"></i>Donations Management
            </h1>
            <a class="btn btn-primary" asp-action="Statistics">
                <i class="fas fa-chart-bar me-2"></i>View Statistics
            </a>
        </div>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Filters -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-2">
                <label class="form-label">Status</label>
                <select name="status" class="form-select">
                    <option value="">All Statuses</option>
                    <option value="Pending" selected="@(Model.StatusFilter == "Pending")">Pending</option>
                    <option value="Completed" selected="@(Model.StatusFilter == "Completed")">Completed</option>
                    <option value="Failed" selected="@(Model.StatusFilter == "Failed")">Failed</option>
                    <option value="Cancelled" selected="@(Model.StatusFilter == "Cancelled")">Cancelled</option>
                    <option value="Refunded" selected="@(Model.StatusFilter == "Refunded")">Refunded</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Type</label>
                <select name="type" class="form-select">
                    <option value="">All Types</option>
                    <option value="OneTime" selected="@(Model.TypeFilter == "OneTime")">One Time</option>
                    <option value="Monthly" selected="@(Model.TypeFilter == "Monthly")">Monthly</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Date From</label>
                <input type="date" name="dateFrom" class="form-control" value="@Model.DateFrom?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-2">
                <label class="form-label">Date To</label>
                <input type="date" name="dateTo" class="form-control" value="@Model.DateTo?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-3">
                <label class="form-label">Search</label>
                <input type="text" name="searchTerm" class="form-control" placeholder="Name, Email, Order ID..." value="@Model.SearchTerm">
            </div>
            <div class="col-md-1">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-primary d-block">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Donations Table -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white border-bottom-0 py-3">
        <h6 class="card-title mb-0 text-muted">
            <i class="fas fa-list me-2"></i>All Donations (@Model.TotalCount)
        </h6>
    </div>
    <div class="card-body p-0">
        @if (Model.Donations.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Donor</th>
                            <th>Amount</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>Payment Date</th>
                            <th>Created</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var donation in Model.Donations)
                        {
                            <tr>
                                <td>
                                    <span class="font-monospace">@donation.OrderId</span>
                                    @if (!string.IsNullOrEmpty(donation.UpayTransactionId))
                                    {
                                        <br>

                                        <small class="text-muted">UPay: @donation.UpayTransactionId</small>
                                    }
                                </td>
                                <td>
                                    <div>
                                        <strong>@donation.DonorName</strong>
                                        <br><small class="text-muted">@donation.DonorEmail</small>
                                        @if (!string.IsNullOrEmpty(donation.DonorPhone))
                                        {
                                            <br>

                                            <small class="text-muted">@donation.DonorPhone</small>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <strong>@donation.Amount.ToString("N0") UZS</strong>
                                    @if (donation.IsRecurring)
                                    {
                                        <br>

                                        <small class="text-info"><i class="fas fa-sync me-1"></i>Recurring</small>
                                    }
                                </td>
                                <td>
                                    <span class="badge @(donation.Type == Soskd.Domain.Enums.DonationType.Monthly ? "bg-info" : "bg-primary")">
                                        @donation.TypeDisplay
                                    </span>
                                </td>
                                <td>
                                    <span class="badge @donation.StatusBadgeClass">
                                        @donation.StatusDisplay
                                    </span>
                                </td>
                                <td>
                                    @if (donation.PaymentCompletedAt.HasValue)
                                    {
                                        <div class="text-muted small">
                                            @donation.PaymentCompletedAt.Value.ToString("MMM dd, yyyy")
                                            <br>@donation.PaymentCompletedAt.Value.ToString("HH:mm")
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <div class="text-muted small">
                                        @donation.CreatedAt.ToString("MMM dd, yyyy")
                                        <br>@donation.CreatedAt.ToString("HH:mm")
                                    </div>
                                </td>
                                <td class="text-center">
                                    <a class="btn btn-outline-primary btn-sm" asp-action="Details" asp-route-id="@donation.Id" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.TotalPages > 1)
            {
                <div class="card-footer bg-white border-top-0">
                    <nav aria-label="Donations pagination">
                        <ul class="pagination pagination-sm justify-content-center mb-0">
                            @if (Model.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new {
                                        page = Model.PageNumber - 1,
                                        status = Model.StatusFilter,
                                        type = Model.TypeFilter,
                                        dateFrom = Model.DateFrom?.ToString("yyyy-MM-dd"),
                                        dateTo = Model.DateTo?.ToString("yyyy-MM-dd"),
                                        searchTerm = Model.SearchTerm
                                    })">Previous</a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new {
                                        page = i,
                                        status = Model.StatusFilter,
                                        type = Model.TypeFilter,
                                        dateFrom = Model.DateFrom?.ToString("yyyy-MM-dd"),
                                        dateTo = Model.DateTo?.ToString("yyyy-MM-dd"),
                                        searchTerm = Model.SearchTerm
                                    })">@i</a>
                                </li>
                            }

                            @if (Model.PageNumber < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new {
                                        page = Model.PageNumber + 1,
                                        status = Model.StatusFilter,
                                        type = Model.TypeFilter,
                                        dateFrom = Model.DateFrom?.ToString("yyyy-MM-dd"),
                                        dateTo = Model.DateTo?.ToString("yyyy-MM-dd"),
                                        searchTerm = Model.SearchTerm
                                    })">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                    <div class="text-center text-muted small mt-2">
                        Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) of @Model.TotalCount entries
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center py-5">
                <div class="mb-3">
                    <i class="fas fa-heart fa-3x text-muted"></i>
                </div>
                <h5 class="text-muted mb-3">No Donations Found</h5>
                <p class="text-muted mb-4">No donations match your current filters.</p>
            </div>
        }
    </div>
</div>